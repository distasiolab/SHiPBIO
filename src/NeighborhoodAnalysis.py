import warnings
warnings.filterwarnings('ignore')

import anndata as ad
import squidpy as sq
import scanpy as sc

import numpy as np
import pandas as pd
import os

from matplotlib import pyplot as plt
from matplotlib.colors import ListedColormap
from cycler import cycler

# --------------------------------------------------------------------------------
# Edit this path
# --------------------------------------------------------------------------------
FILEPATHBASE = '/Users/mmd47/Library/CloudStorage/GoogleDrive-mmd47@yale.edu/My Drive/DiStasio Lab/DiStasio Lab Share/'
#FILEPATHBASE = '/home/mdistasio/YaleGoogleDrive/DiStasio Lab/DiStasio Lab Share/'


# --------------------------------------------------------------------------------
SAVEFIGS = False
if SAVEFIGS:
    IMGDIR = os.path.join(FILEPATHBASE,'02 Analysis', 'annData_ManualAnnotate', 'img', 'tmp')

# --------------------------------------------------------------------------------
# Load integrated datasets (generated by IntegrateHarmony.py)
# --------------------------------------------------------------------------------
filename = os.path.join(FILEPATHBASE,'02 Analysis', 'annData_ManualAnnotate', 'calc', 'retinas_all_integrated_harmony.h5ad')
print("Loading Data from: " + filename)
retinas_all = ad.read_h5ad(filename)
print("Done Loading!")


SampleKey = retinas_all.uns["SampleKey"]
Samples = list(retinas_all.obs['dataset'].cat.categories)



nGroupsToPlot = 10
groups = sorted(np.unique(retinas_all.obs['leiden']), key=lambda x: int(x))[0:nGroupsToPlot]

retinas_all.obs['leiden_sel'] = retinas_all.obs['leiden']
retinas_all.obs['leiden_sel'] = retinas_all.obs['leiden_sel'].cat.add_categories('Other')
retinas_all.obs['leiden_sel'][~retinas_all.obs['leiden'].isin(groups)] = 'Other'
retinas_all.obs['leiden_sel'] = retinas_all.obs['leiden_sel'].cat.remove_unused_categories()

# --------------------------------------------------------------------------------
# Compute neighborhood graph
# --------------------------------------------------------------------------------
print('Computing Spatial Neighborhood Graph')
sq.gr.spatial_neighbors(retinas_all, coord_type="generic", spatial_key="spatial")

print('Computing Spatial Neighborhood Enrichment')

# --------------------------------------------------
'''
N.B.
In .../site-packages/squidpy/_utils.py

Had to change line 172:

from:
queue = Manager.Queue()

to:

queue = Queue()

'''
# --------------------------------------------------

sq.gr.nhood_enrichment(retinas_all, cluster_key="leiden_sel")


# --------------------------------------------------
# Save data
# --------------------------------------------------

out_filename = os.path.join(FILEPATHBASE,'02 Analysis', 'annData_ManualAnnotate', 'calc', 'retinas_all_integrated_harmony_nhood.h5ad')
retinas_all.write(out_filename)

print('Saved data to: ' + out_filename)
